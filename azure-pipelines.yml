trigger:
- main

parameters:
  - name: azureServiceConnection
    type: string
    default: arm
  - name: resourceGroupName
    type: string
    default: userapirg
  - name: location
    type: string
    default: australiaeast
  # db
  - name: dbName
    type: string
    default: usersdbnz
  - name: dbCatalogName
    type: string
    default: UsersDatabase
  - name: dbUsername
    type: string
    default: dbadmin
  # function
  - name: functionAppName
    type: string
    default: usersapinz
  # gateway
  - name: gatewayName
    type: string
    default: usersgatewaynz

pool: 'SelfHostedPool'

steps:
# Delete and build the resource group.
- task: AzureCLI@2
  inputs:
    azureSubscription: '${{ parameters.azureServiceConnection }}'
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: |
      $rgExists = az group exists --name ${{ parameters.resourceGroupName }}
      if ($rgExists)
      {
        az group delete `
        --name ${{ parameters.resourceGroupName }} `
        --yes
      }
      az group create `
        --name ${{ parameters.resourceGroupName }} `
        --location ${{ parameters.location }}      

# Build dotnet function.
- template: Templates/dotnet.yml
  parameters: 
    solutionPath: $(System.DefaultWorkingDirectory)/UserAPI

# Create database.
- template: Templates/database.yml
  parameters:
    azureServiceConnection: ${{ parameters.azureServiceConnection }}
    resourceGroupName: ${{ parameters.resourceGroupName }}
    bicepPath: $(System.DefaultWorkingDirectory)/Biceps/database.bicep
    sqlDeployPath: $(System.DefaultWorkingDirectory)/deploy.sql
    location: ${{ parameters.location }}
    dbName: ${{ parameters.dbName }}
    dbCatalogName: ${{ parameters.dbCatalogName }}
    dbUsername: ${{ parameters.dbUsername }}

# Create azure function.
- template: Templates/function.yml
  parameters: 
    azureServiceConnection: ${{ parameters.azureServiceConnection }}
    resourceGroupName: ${{ parameters.resourceGroupName }}
    bicepPath: $(System.DefaultWorkingDirectory)/Biceps/function.bicep
    location: ${{ parameters.location }}
    appName: ${{ parameters.functionAppName }}
    functionBuildPath: $(System.DefaultWorkingDirectory)/UserAPI/build/build.zip
    databaseConnectionString: 'Server=tcp:${{ parameters.dbName }}.database.windows.net,1433;Initial Catalog=${{ parameters.dbCatalogName }};Persist Security Info=False;User ID=${{ parameters.dbUsername }};Password=$(DBPasswordSecret);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'

# Create API gateway.
- template:  Templates/gateway
  parameters:
    azureServiceConnection: ${{ parameters.azureServiceConnection }}
    resourceGroupName: ${{ parameters.resourceGroupName }}
    bicepPath: $(System.DefaultWorkingDirectory)/Biceps/gateway.bicep
    location: ${{ parameters.location }}
    gatewayName: ${{ parameters.gatewayName }}
